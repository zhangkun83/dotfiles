#!/bin/bash
cd $HOME
# Use relative directory for local paths, because I may be running
# this script under MINGW64 (provided by Git bash) whose home is like
# "/c/Users/zhangkun" while the rsync on the system is a Cygwin
# version whose home is like "/cygdrive/c/home/zhangkun". Passing the
# absolute path from this script to rsync won't work.
DIR="orgwork"
BACKUP_DIR="rsync://localhost:1873/x20/users/zh/zhangkun/orgwork"

if [[ "$1" != "upload" ]]; then
    echo "Downloading remote files ..."
    rsync -rtuv "$BACKUP_DIR/" "$DIR"
    if [[ "$?" -ne 0 ]]; then
        echo "!!! Download FAILED !!!"
        echo "- Press Enter to open orgwork in READ-ONLY mode ..."
        echo "- If you are sure local files are up-to-date,"
        echo "  press S followed by Enter to open orgwork normally ..."
        read response
        if [[ "$response" != "S" ]]; then
            readonly_hook="(add-hook 'org-mode-hook (lambda() (read-only-mode 1)))"
        fi
    else
        echo "Download SUCCESSFUL. Press Enter to open orgwork ..."
        read
    fi

    echo "Launching Emacs... Have a very safe and productive day."
    if [[ $(uname) =~ ^MINGW.* ]]; then
        # The location of Windows version Emacs configs
        export HOME="c:/Users/zhangkun/AppData/Roaming"
        EMACS_BIN="/c/Program Files/Emacs/emacs-28.1/bin/emacs"
    else
        EMACS_BIN="emacs"
    fi
    "$EMACS_BIN" --eval="(progn \
                (require 'zk-org)
                (setq zk-orgwork-directory (concat default-directory \"$DIR\"))
                (setq org-agenda-files (list zk-orgwork-directory)\
                      frame-title-format \"orgwork\" )\
                $readonly_hook
                (zk-orgwork-goto-latest-note-file)
                (end-of-buffer)
                (setq server-name \"orgwork\")
                (server-start))"
    echo "Emacs session ended. Wrapping up ..."
fi

if [[ -z "$readonly_hook" ]]; then
    while true; do
        echo "Uploading local changes ..."
        rsync -rtuv --include='*.org' --include='*.org_archive' --exclude='*' "$DIR/" "$BACKUP_DIR" && break
        echo "Upload FAILED. Press Enter to retry ..."
        read
    done
else
    echo "orgwork was in READ-ONLY mode. Upload skipped."
fi
